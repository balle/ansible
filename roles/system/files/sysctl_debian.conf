# Dont respond to broadcast pings
sys.net.ipv4.icmp_echo_ignore_broadcasts=1

# dont respond to strange icmp packets
sys.net.ipv4.icmp_ignore_bogus_error_responses=1

# Enable SYN Flood protection
sys.net.ipv4.tcp_syncookies=1

# Kick all IP Spoofing shit
sys.net.ipv4.conf.all.rp_filter=1

# log strange packets
sys.net.ipv4.conf.all.log_martians=1

# Set default TTL to 61 (default for Linux is 64)
sys.net.ipv4.ip_default_ttl=61

# send RST packet if buffer is full
sys.net.ipv4.tcp_abort_on_overflow=1

# wait max 30 seconds for FIN.ACK
sys.net.ipv4.tcp_fin_timeout=30

# only send 3 syn.ack tries
sys.net.ipv4.tcp_synack_retries=3

# power management tunings
vm.dirty_writeback_centisecs=1500
kernel.nmi_watchdog=0

# Hide kernel symbols
kernel.kptr_restrict = 1

# Avoid kernel memory address exposures via dmesg.
kernel.dmesg_restrict = 1

# Turn off kexec
kernel.kexec_load_disabled = 1

# ptrace hardening
# 1: Avoid non-ancestor ptrace access to running processes and their credentials.
# 2: Restrict ptrace access to processes with CAP_SYS_PTRACE
# 3: Completely disable ptrace
kernel.yama.ptrace_scope = 1

# Disable User Namespaces, as it opens up a large attack surface to unprivileged users.
# On Debian kernel.unprivileged_userns_clone is set to 0 by default as well
# Docker and Evolution wont work with this
#user.max_user_namespaces = 0

# Turn off unprivileged eBPF access.
kernel.unprivileged_bpf_disabled = 1

# Turn on BPF JIT hardening, if the JIT is enabled.
net.core.bpf_jit_harden = 2

# On x86_64 this adds some bits to userspace ASLR
vm.mmap_rnd_bits=32
